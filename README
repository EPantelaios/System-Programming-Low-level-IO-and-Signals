Ευριπίδης Παντελαίος - 1115201600124


Compiling source code:
make

Execution of the program:
./travelMonitor -m <numMonitors> -b <bufferSize> -s <sizeOfBloom> -i <input_dir>

Για παράδειγμα εκτελούμε: ./travelMonitor -m 15 -b 3000 -s 100000 -i input_dir

Η σειρά των ορισμάτων για να τρέξει το πρόγραμμα μπορεί να δοθεί με οποιαδήποτε σειρά.

Και τα δύο εκτελέσιμα αρχεία παράγονται από το Makefile με χρήση της εντολης make (η κανονικη εντολη ειναι: 'make all' αλλα εχω αλλαξει την default συμπεριφορα για να γινεται απλα με την εντολη 'make').




> Περιγραφή του προγράμματος travelMonitor

• Για την ανταλλαγη μηνυματων μεσω των named pipes μεταξυ των processes χρησιμοποιουνται 2 named pipes μεταξυ του parent process και καθε child process. Ενα στο οποιο ο πατερας γραφει και το παιδι διαβαζει και το αλλο στο οποιο το παιδι γραφει και ο πατερας διαβαζει.

Για την επικοινωνια μεσω των named pipes χρησιμοποιειται ενα πρωτοκολλο επικοινωνιας ως εξης:
Τα πρώτα 8 bytes που θα γραφτουν και θα διαβαστουν αντιστοιχα οριζουν 2 ακεραιους sizeof(int). Ο πρωτος ακεραιος δηλωνει εναν ειδικο αριθμο (special code) που δηλωνει τι ακριβως ειναι τα bytes που προκειται να γραφτουν, δηλαδη ποια ενεργεια θα πρεπει να κανει ο παραληπτης. Ο δευτερος ακεραιος δηλωνει τον αριθμο των bytes που πρεπει να διαβασει ο παραληπτης. Επειτα απο τους 2 ακεραιους αριθμους στελνονται τα πραγματικα bytes του μηνυματος. Τα bytes του μηνυματος σπανε σε κομματια μεγεθους 'bufferSize', συνεπως καθε φορα διαβαζονται bytes μεγεθους 'bufferSize' και μονο για παραδειγμα στο τελευταιο μηνυμα ισως χρειαστει να διαβαστουν λιγοτερα bytes απο 'bufferSize'.
Για τις πρωτες πληροφοριες που το parent process στελνει στα child processes (οπως αποστολη buffer_size, bloom_size) το special code παιρνει την τιμη 1 ως default, καθως η ενεργεια που πρεπει να κανει ο παραληπτης ειναι τετριμμενη, καθως γνωριζει τι πρεπει να κανει. Για τις πληροφοριες που στελνει πισω το child στο parent process οπως τους ιους και τα bloom filters που διαχειριζεται το special code παιρνει την τιμη 2. 
Το parent process γνωριζει οτι το παιδι ειναι ετοιμο να εξυπηρετησει αιτηματα οταν το παιδι αποστειλει την ειδικη συμβολοσειρα "*I am ready to serve requests*".

Special Codes:
1: Parent process sends basic info like buffer_size, bloom_size and the paths of directories (countries) it will manage each child process.
2: Child processs sends the viruses and bloom filters which it manages to parent process.
3: For /travelRequest parent process send 'citizenID', 'virus_name' and 'country' to each child process 
    to give vaccination info for 'citizenID' in case it manages 'citizenID' itself.
4: For /travelRequest child process sends 'YES' for the current citizenID.
5: For /travelRequestTo child process sends 'NO' for the current citizenID.
6: For /searchVaccinationStatus parent process send requests to all monitor processes to serve the request.
7: For /searchVaccinationStatus monitor process send the info for the citizen.
8: For /searchVaccinationStatus monitor process send the requests (vaccinations info) for the citizenID.
9: For /searchVaccinationStatus monitor process send a terminated message when all vaccinations info have been sent.
10: For /addVaccinationRecords child process sends the (new) number of viruses to parent process.
11: For /addVaccinationRecords child process sends the (new) viruses to parent process.
12: For /addVaccinationRecords child process sends the updated bloom filters to parent process.



• Στην εντολη /travelRequest αν το αιτημα περασει τον αρχικο ελεγχο απο το parent process και σταλθει στο monitor process που διαχειριζεται την χωρα 'countryFrom' θα ελεγθει αν η χωρα 'countryFrom' ειναι πραγματι η χωρα του συγκεκριμενου πολιτη.
Αυτο το αναφερω, καθως υπηρχε μια συγχυση ως προ αυτο. Για παραδειγμα αν σκεφτουμε οτι ενα process monitor μπορει να διαχειριζεται πολλες χωρες θα μπορουσε να ληφθει λανθασμενη απαντηση καθως για τις χωρες που ανηκουν στο ιδιο monitor process χρησιμοποιω για κοινους ιους το ιδιο skip list και bloom filter.
Σε περιπτωση που η χωρα για τον πολιτη δεν ειναι η σωστη τοτε το αιτημα θα απορριφθει απο το monitor process και θα δοθει αρνητικη απαντηση για εμβολιασμο στο output.


• Στην εντολη /travelRequest για τον υπολογισμό των 6 μηνων απο τοτε που εγινε ο εμβολιασμος μεχρι την ημερομηνια του ταξιδιου υπολογιζεται οτι καθε μηνας εχει 30 μερες, οποτε υπολογιζεται οτι εχουν περασει λιγοτερες απο 180 μερες. Επισης, η παραμετρος countryTo θεωρουμε οτι μπορει να ειναι οποιαδηποτε χωρα ακομα και να μην ανηκει σε καποια απο τις υπαρχουσες χωρες.


• Στην εντολη /travelStats υπολογιζονται οι αιτησεις που εγιναν στην εντολη /travelRequest. Κραταω σε μια ξεχωριστη λιστα τα στοιχεια καθε αιτησης. Πιο συγκεκριμενα κραταω το ονομα του ιου, την χωρα προορισμου (countryTo), την ημερομηνια του ταξιδιου και αν το αιτημα εγινε δεκτο ή απορριφθηκε. Οποτε αυτο που κανω ειναι να διασχιζω την λιστα και μετραω τους κομβους που πληρουν τα κριτηρια της εντολης για να εκτυπωθουν τα στατιστικα στο output.


• Σχετικα με την εντολη /addVaccinationRecords θα πρεπει το αρχειο ή τα αρχεια που θα προσθεθουν στο directory να εχουν unique citizenID σε σχεση με τα αρχεια που ηδη υπαρχουν για να δινονται σωστες απαντησεις στα αιτηματα για ταξιδια των πολιτων και στις υπολοιπες εντολες χρηστη.


• Στην εντολη απο τον χρηστη /searchVaccinationStatus χρησιμοποιω την εντολη select() για να ελεγχει το parent process ποιο απο ολα τα child εχει γραψει στο αντιστοιχο named pipe για να διαβασει ο πατερας τα στοιχεια του πολιτη και τις πληροφοριες για τους εμβολιασμους που εχει ή δεν εχει κανει και υπαρχουν καταχωρημενες στις δομες δεδομενων.


• Χρηση της εντολης select() γινεται και στα child processes οταν περιμενουν να στειλει κατι το parent process. Ο λογος που το κανω αυτο ειναι για να μπορει το child process ανα τακτα χρονικα διαστηματα (0.1 sec οπως το εχω ορισει) να τσεκαρει αν εχει λαβει καποιο signal για να κανει τις καταλληλες ενεργειες.


• Εχουν υλοποιηθει ολα τα signals που αφορουν και το parent process και τα child processes. Οταν ληφθει καποιο σημα στην συναρτηση για signal_handler το μονο που γινεται ειναι να αλλαξει μια global μεταβλητη απο 0 σε 1 που λειτουργει ως flag για το αντιστοιχο σημα. Πιο συγκεκριμενα, το parent process μπορει να διαχειριστει τα σηματα sigchld, sigint, sigquit και τα child processes διαχειριζονται τα σηματα sigusr1, sigint και sigquit.


• Προαιρετικη εξτρα λειτουργια: Στην ατερμονη λουπα που το προγραμμα περιμενει εισοδο απο τον χρηστη για τις εντολες (/travelRequest, /travelStats, /addVaccinationRecords κλπ) τυπωνω σε ενα αρχειο με ονομα "Monitor_info" με την συναρτηση 'print_monitors_info()' μερικες πληροφοριες για το καθε monitor process οπως το pid και τις χωρες που διαχειριζεται. Αυτο βοηθαει στον ελεγχο της ορθοτητας του προγραμματος οταν τερματιζει ενα child process και δημιουργειται νεο στην θεση του, προκειμενου να ελεγξουμε οτι πραγματι αλλαξε το pid και οτι οι χωρες που διαχειριζεται ειναι σωστες. Αυτο αποτελει εξτρα λειτουργια που δεν αναφερεται στην ασκηση. Αποφασισα να κρατησω το συγκεκριμενο κομματι κωδικα, καθως βοηθαει στο debugging και στην ορθοτητα των πληροφοριων που κρατανε τα processes.


• Οπως ειπωθηκε στο piazza τα signals τα στελνουμε αποκλειστικα μεσω της εντολη 'kill'. Επομενως δεν διαχειριζομαι το Ctrl+C για παραδειγμα, καθως το SIGINT θα σταλθει σε ολα τα processes επειδη χρησιμοποιω ενα terminal.





> Περιγραφή του bash script

Αρχικά, διαβάζονται και ελέγχονται τα ορίσματα που δόθηκαν ότι είναι έγκυρα. Έπειτα ελεγχεται αν υπαρχει το directory 'input_dir'. Σε περιπτωση που υπαρχει το script τερματιζει, διαφορετικα συνεχιζει. Επειτα , διαβαζονται οι εγγραφες απο το αρχειο 'inputFile' και αποθηκευονται σε εναν πινακα. Αντιστοιχως, αποθηκευονται μονο οι unique χωρες σε εναν αλλον πινακα που χρησιμοποιουμε στην συνεχεια. Δημιουργουνται ολοι οι υποφακελοι ολα τα αδεια αρχεια που θα πρεπει να γεμισουμε με εγγραφες. 
Για να γινει αυτο εχουμε εναν πινακα, οπου καθε θεση του αναπαριστα την πληροφορια που θα γραφτει αργοτερα στο αντιστοιχο αρχειο, δηλαδη καθε θεση του πινακα αποτελειται απο εγγραφες για ενα αρχειο μιας χωρας. Αναλογα με το ποσα αρχεια θα εχουμε σε καθε υποφακελο (δηλαδη αναλογα με την παραμετρο 'numFilesPerDirectory' που δινουμε κατα την εισοδο) θα συσχετισουμε και τις θεσεις του πινακα που κραταμε τις εγγραφες. Για παραδειγμα για 'numFilesPerDirectory'=3, αυτο σημαινει οτι οι θεσεις 0,1,2 αντιστοιχουν στην πρωτη χωρα (αλφαβητικα ειναι το 'Afghanistan') και θα αποτελεσουν τα αρχεια για Afghanistan-1.txt, Afghanistan-2.txt, Afghanistan-3.txt. Οι θεσεις 3,4,5 του πινακα θα αποτελεσουν τα αρχεια για την δευτερη χωρα που εχουμε κλπ. 
Στο τελος γραφουμε ολες τις εγγραφες που εχουμε αποθηκευσει στον πινακα στο αρχειο που αντιστοιχουν.





> Σχόλια - Παρατηρήσεις

• Στις εγγραφες που παραγονται στα sub-directories απο το bash script υπαρχει και η χωρα ως πληροφορια οπως δηλαδη ηταν και στην πρωτη εργασια.

• Τα ορίσματα των εντολών που πληκτρολογεί ο χρήστης, αφού ολοκληρωθεί η εισαγωγή των εγγραφών στις δομές, πρέπει να είναι με την αντίστοιχη σειρά που δίνονται από την εκφώνηση για να θεωρηθεί έγκυρη η εντολή.

• Κατά την εισαγωγή των εγγραφών στις δομές των monitor processes ελέγχω τα ορίσματα που διαβάστηκαν αν είναι έγκυρα. Σύμφωνα με την εκφώνηση ελέγχω τα παρακάτω:
Πιο συγκεκριμένα, ελέγχω αριθμό ορισμάτων, οι συμβολοσειρές να αποτελούνται μόνο από γράμματα και να μην περιέχουν αριθμούς και ειδικά σύμβολα. Αντίστοιχα, οι αριθμοί να περιέχουν μόνο αριθμητικά ψηφία και όχι γράμματα ή σύμβολα. Το όρισμα 'virusName' μπορεί να αποτελείται απο γράμματα, αριθμούς και μέχρι μία παύλα.

• Σε κάθε αρχείο υπάρχουν τα απαραίτητα επεξηγηματικά σχόλια στα σημεία που έχει κριθεί απαραίτητο, τα οποία διευκολύνουν την ανάγνωση και κατανόηση του κώδικα.

• Έγινε μεταγλώττιση και εκτέλεση του προγράμματος σε διάφορα μηχανήματα linux της σχολής (όπως linux03, linux10, linux19, linux28).di.uoa.gr, καθώς και επιπλέον δοκιμές λαμβάνοντας υπ’όψιν να λειτουργεί σωστά το πρόγραμμα για κάθε δυνατή περίπτωση στο πλαίσιο της εργασίας.

• Με την βοήθεια του προγραμματιστικού εργαλείου Valgrind έχει ελεγχθεί ότι δεν υπάρχουν errors και memory leaks, όλος ο χώρος αποδεσμεύεται κανονικά.